Presentation: https://softuni.bg/trainings/resources/officedocument/79019/css-box-model-presentation-html-and-css-january-2023/3975
 
Search for: BEM naming convention, transition
Everything in html and CSS is a box.
 
What is CSS Box Model?
- The CSS box model is essentially a box that wraps around every HTML element.
 
In html the initial value of an element is inline or block. Inline-block should be added as a property in our CSS:
display: inline-block
 
Block element - fills up horizontal space - row.
Inline elements don't start on new line. Break on two rows. Inline elements don't have width and height. Its size depend on the container.
Inline-block - start on new line, don't break on two rows. Inline-block elements can have width and height. We can control the width of elements that are on the same row.
 
Width is static, isn't moving; when we use it with percentage it is for example 50% from its PARENT
Min width and Max width are stronger than width.
Even if we set the width of block element to 50%, the other 50% are not usable and the next element comes on a new line.
 
Height: auto - comes from the elements height, works with percentages only when a parent has set concrete height.
 
Overflow -  content that goes beyond the borders of the parent;
overflow-scroll; - we always get scrolls weather needed or not
overflow-hidden; - we don't see it
visible and unset - not working ;d
 
What is Padding and what is Margin?
Padding - the space inside the element
Margin - the space outside the element
 
Padding isn't functionally usable to inline elements. Margin on inline elements works only horizontally.
 
In the browser inspector orange in the inspector is margin, green is padding, light-orange is border.
 
Body element always has margin. 
 
Margins on the vertical (only) don't add to each other. Two vertical margins collapse. The biggest is used! It is easier to work only in one direction and use only margin-bottom.
Margin-border-start - top margin
 
border: width style color; inside the container
border-radius - oval ends
 
What is box sizing?
It sets how the total width and height of an element is calculated
 
To reset box-sizing:
 
It is a good practice to use element {box-sizing: border-box;}
and add:
 
*, *::after, ::before {box-sizing: border-box;}
 
When working with design the zoom should be 100% !!!


CSS Box Model - Exercise
 
OUTLINE AND BORDER: Outline differs from borders! Unlike border, the outline is drawn outside the element's border, and may overlap other content. Also, the outline is NOT a part of the element's dimensions; the element's total width and height is not affected by the width of the outline. The border is changing the size of the element, we can control it more. The outline comes after the border. The outline has the outline-offset property. Outline is mostly used for a hint to the users- just a visual element.
Box-shadow is a part of the container but doesn't change the size of the element.
 
margin-auto - used to center block elements horizontally:
margin: 0 auto; https://www.hongkiat.com/blog/css-margin-auto/
auto is like a ПРУЖИHA 
 
vertical-align: middle - property to center two elements with different height
text-align: center - doesn't work when the width of block element is percentage; better use margins.
 
To put two texts one next to another using width percentage: we should set the font-size of the container- 0px and then write
 
.container(class) > * {font-size:somesize px}
 
calc(20%-10px)
It is an inbuilt CSS function which allows us to perform calculations. It can be used to calculate length, percentage, time, number, integer frequency, or angle. It uses the four simple arithmetic operators add (+), multiply (*), subtract (-), and divide (/).
 
Reset method:
https://andy-bell.co.uk/a-modern-css-reset/
we should add the reset with link href="styles/reset.css" - the upper link code in the folder
 
card elements - can be article 
 
unsplash - page for free images
mycolor.space - color themes
tint and shade generator - makes darker and lighter shades of a color we want
 
When changing the size of image to keep the proportions:
max-width: 100%
display: block
height:100%
object-fit: cover;  (needs width and height)
works with width(horizontal) not height.
 
Another way to put image is by making a container and making the picture its background:
background-image: url("");
background-size: cover;
background-repeat: no-repeat;
background-position: center center;
 
center element:
the element {
display: inline-block;
padding: 4px 16px;
margin-bottom: 32px
}
 
the content-box {text-align:center}
 
project:last-child {margin-right: 0px}
:not(last-child)
 
font-size = 0 - v content box-a !!! not to take the enters in the text as whitespace
 
aspect-ratio: 1/1 - making something for example photo squared
 
.project:not(:last-child) {
  margin-right: 4px;
}
